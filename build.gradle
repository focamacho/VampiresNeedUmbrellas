plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
}

version = '1.0'
group = 'com.focamacho'

java {
    archivesBaseName = 'VampiresNeedUmbrellas-1.20.4'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
       programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    //Vampirism
    compileOnly('de.teamlapen.vampirism:Vampirism:1.20.4-1.10.0-beta.2:api') { transitive = false }
    runtimeOnly('de.teamlapen.vampirism:Vampirism:1.20.4-1.10.0-beta.2') { transitive = false}

    //Curios
    compileOnly 'top.theillusivec4.curios:curios-neoforge:7.3.2+1.20.4:api'
    runtimeOnly 'top.theillusivec4.curios:curios-neoforge:7.3.2+1.20.4'

    compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
}

repositories {
    mavenLocal()
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url = "https://maxanier.de/maven2"
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}